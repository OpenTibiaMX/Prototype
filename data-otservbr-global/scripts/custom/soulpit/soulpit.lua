-- local event = {
    -- waves = {
        -- [48079] = { 
        -- monsters = {
            -- {"angry bloated man-maggot", "angry bloated man-maggot", "angry bloated man-maggot", "angry bloated man-maggot"},
            -- {"enraged bloated man-maggot", "enraged bloated man-maggot", "enraged bloated man-maggot"},
            -- {"furious bloated man-maggot", "furious bloated man-maggot", "furious bloated man-maggot"},
            -- {"savage bloated man-maggot", "savage bloated man-maggot"},
            -- {"wrathful bloated man-maggot"}
        -- },        
            -- storage = 876547,
            -- waves = 5,
            -- name = "Bloated Man-Maggot"
        -- },
        -- [48069] = { 
        -- monsters = {
            -- {"angry converter", "angry converter", "angry converter", "angry converter"},
            -- {"enraged converter", "enraged converter", "enraged converter"},
            -- {"furious converter", "furious converter", "furious converter"},
            -- {"savage converter", "savage converter"},
            -- {"wrathful converter"}
        -- },        
            -- storage = 876548,
            -- waves = 5,
            -- name = "Converter"
        -- },
        -- [48068] = { 
            -- monsters = {
                -- {"angry darklight construct", "angry darklight construct", "angry darklight construct", "angry darklight construct"},
                -- {"enraged darklight construct", "enraged darklight construct", "enraged darklight construct"},
                -- {"furious darklight construct", "furious darklight construct", "furious darklight construct"},
                -- {"savage darklight construct", "savage darklight construct"},
                -- {"wrathful darklight construct"}
            -- },        
                -- storage = 876549,
                -- waves = 5,
                -- name = "Darklight Construct"
            -- },
        -- [48072] = { 
            -- monsters = {
                -- {"angry darklight emitter", "angry darklight emitter", "angry darklight emitter", "angry darklight emitter"},
                -- {"enraged darklight emitter", "enraged darklight emitter", "enraged darklight emitter"},
                -- {"furious darklight emitter", "furious darklight emitter", "furious darklight emitter"},
                -- {"savage darklight emitter", "savage darklight emitter"},
                -- {"wrathful darklight emitter"}
            -- },        
                -- storage = 876550,
                -- waves = 5,
                -- name = "Darklight Emitter"
        -- },
        -- [48070] = { 
            -- monsters = {
                -- {"angry darklight matter", "angry darklight matter", "angry darklight matter", "angry darklight matter"},
                -- {"enraged darklight matter", "enraged darklight matter", "enraged darklight matter"},
                -- {"furious darklight matter", "furious darklight matter", "furious darklight matter"},
                -- {"savage darklight matter", "savage darklight matter"},
                -- {"wrathful darklight matter"}
            -- },        
                -- storage = 876551,
                -- waves = 5,
                -- name = "Darklight Matter"
        -- },
        -- [48085] = { 
            -- monsters = {
                -- {"angry darklight source", "angry darklight source", "angry darklight source", "angry darklight source"},
                -- {"enraged darklight source", "enraged darklight source", "enraged darklight source"},
                -- {"furious darklight source", "furious darklight source", "furious darklight source"},
                -- {"savage darklight source", "savage darklight source"},
                -- {"wrathful darklight source"}
            -- },        
                -- storage = 876552,
                -- waves = 5,
                -- name = "Darklight Source"
        -- },
        -- [48086] = { 
            -- monsters = {
                -- {"angry darklight striker", "angry darklight striker", "angry darklight striker", "angry darklight striker"},
                -- {"enraged darklight striker", "enraged darklight striker", "enraged darklight striker"},
                -- {"furious darklight striker", "furious darklight striker", "furious darklight striker"},
                -- {"savage darklight striker", "savage darklight striker"},
                -- {"wrathful darklight striker"}
            -- },
                -- storage = 876553,
                -- waves = 5,
                -- name = "Darklight Striker"
        -- },
        -- [48066] = { 
            -- monsters = {
                -- {"angry meandering mushroom", "angry meandering mushroom", "angry meandering mushroom", "angry meandering mushroom"},
                -- {"enraged meandering mushroom", "enraged meandering mushroom", "enraged meandering mushroom"},
                -- {"furious meandering mushroom", "furious meandering mushroom", "furious meandering mushroom"},
                -- {"savage meandering mushroom", "savage meandering mushroom"},
                -- {"wrathful meandering mushroom"}
            -- },
                -- storage = 876554,
                -- waves = 5,
                -- name = "Meandering Mushroom"
        -- },
        -- [48065] = { 
            -- monsters = {
                -- {"angry mycobiontic beetle", "angry mycobiontic beetle", "angry mycobiontic beetle", "angry mycobiontic beetle"},
                -- {"enraged mycobiontic beetle", "enraged mycobiontic beetle", "enraged mycobiontic beetle"},
                -- {"furious mycobiontic beetle", "furious mycobiontic beetle", "furious mycobiontic beetle"},
                -- {"savage mycobiontic beetle", "savage mycobiontic beetle"},
                -- {"wrathful mycobiontic beetle"}
            -- },
                -- storage = 876555,
                -- waves = 5,
                -- name = "Mycobiontic Beetle"
        -- },
        -- [48067] = { 
            -- monsters = {
                -- {"angry oozing carcass", "angry oozing carcass", "angry oozing carcass", "angry oozing carcass"},
                -- {"enraged oozing carcass", "enraged oozing carcass", "enraged oozing carcass"},
                -- {"furious oozing carcass", "furious oozing carcass", "furious oozing carcass"},
                -- {"savage oozing carcass", "savage oozing carcass"},
                -- {"wrathful oozing carcass"}
            -- },
                -- storage = 876556,
                -- waves = 5,
                -- name = "Oozing Carcass"
        -- },
        -- [48071] = { 
            -- monsters = {
                -- {"angry oozing corpus", "angry oozing corpus", "angry oozing corpus", "angry oozing corpus"},
                -- {"enraged oozing corpus", "enraged oozing corpus", "enraged oozing corpus"},
                -- {"furious oozing corpus", "furious oozing corpus", "furious oozing corpus"},
                -- {"savage oozing corpus", "savage oozing corpus"},
                -- {"wrathful oozing corpus"}
            -- },
                -- storage = 876557,
                -- waves = 5,
                -- name = "Oozing Corpus"
        -- },
        -- [48080] = { 
            -- monsters = {
                -- {"angry rotten man-maggot", "angry rotten man-maggot", "angry rotten man-maggot", "angry rotten man-maggot"},
                -- {"enraged rotten man-maggot", "enraged rotten man-maggot", "enraged rotten man-maggot"},
                -- {"furious rotten man-maggot", "furious rotten man-maggot", "furious rotten man-maggot"},
                -- {"savage rotten man-maggot", "savage rotten man-maggot"},
                -- {"wrathful rotten man-maggot"}
            -- },
                -- storage = 876559,
                -- waves = 5,
                -- name = "Rotten Man-Maggot"
        -- },
        -- [48083] = { 
            -- monsters = {
                -- {"angry sopping carcass", "angry sopping carcass", "angry sopping carcass", "angry sopping carcass"},
                -- {"enraged sopping carcass", "enraged sopping carcass", "enraged sopping carcass"},
                -- {"furious sopping carcass", "furious sopping carcass", "furious sopping carcass"},
                -- {"savage sopping carcass", "savage sopping carcass"},
                -- {"wrathful sopping carcass"}
            -- },
                -- storage = 876560,
                -- waves = 5,
                -- name = "Sopping Carcass"
        -- },
        -- [48084] = { 
            -- monsters = {
                -- {"angry sopping corpus", "angry sopping corpus", "angry sopping corpus", "angry sopping corpus"},
                -- {"enraged sopping corpus", "enraged sopping corpus", "enraged sopping corpus"},
                -- {"furious sopping corpus", "furious sopping corpus", "furious sopping corpus"},
                -- {"savage sopping corpus", "savage sopping corpus"},
                -- {"wrathful sopping corpus"}
            -- },
                -- storage = 876561,
                -- waves = 5,
                -- name = "Sopping Corpus"
        -- },
        -- [48081] = { 
            -- monsters = {
                -- {"angry walking pillar", "angry walking pillar", "angry walking pillar", "angry walking pillar"},
                -- {"enraged walking pillar", "enraged walking pillar", "enraged walking pillar"},
                -- {"furious walking pillar", "furious walking pillar", "furious walking pillar"},
                -- {"savage walking pillar", "savage walking pillar"},
                -- {"wrathful walking pillar"}
            -- },
                -- storage = 876562,
                -- waves = 5,
                -- name = "Walking Pillar"
        -- },
        -- [48082] = { 
            -- monsters = {
                -- {"angry wandering pillar", "angry wandering pillar", "angry wandering pillar", "angry wandering pillar"},
                -- {"enraged wandering pillar", "enraged wandering pillar", "enraged wandering pillar"},
                -- {"furious wandering pillar", "furious wandering pillar", "furious wandering pillar"},
                -- {"savage wandering pillar", "savage wandering pillar"},
                -- {"wrathful wandering pillar"}
            -- },
                -- storage = 876563,
                -- waves = 5,
                -- name = "Wandering Pillar" 
        -- },
        -- [47952] = {
            -- monsters = {
                -- {"angry bony sea devil", "angry bony sea devil", "angry bony sea devil", "angry bony sea devil"},
                -- {"enraged bony sea devil", "enraged bony sea devil", "enraged bony sea devil"},
                -- {"furious bony sea devil", "furious bony sea devil", "furious bony sea devil"},
                -- {"savage bony sea devil", "savage bony sea devil"},
                -- {"wrathful bony sea devil"},
            -- },
                -- storage = 876564,
                -- waves = 5,
                -- name = "Bony Sea Devil"
            -- },
        -- [47956] = {
            -- monsters = {
                -- {"angry brachiodemon", "angry brachiodemon", "angry brachiodemon", "angry brachiodemon"},
                -- {"enraged brachiodemon", "enraged brachiodemon", "enraged brachiodemon"},
                -- {"furious brachiodemon", "furious brachiodemon", "furious brachiodemon"},
                -- {"savage brachiodemon", "savage brachiodemon"},
                -- {"wrathful brachiodemon"},
            -- },
                -- storage = 876565,
                -- waves = 5,
                -- name = "Brachiodemon"
            -- },
        -- [47957] = {
            -- monsters = {
                -- {"angry branchy crawler", "angry branchy crawler", "angry branchy crawler", "angry branchy crawler"},
                -- {"enraged branchy crawler", "enraged branchy crawler", "enraged branchy crawler"},
                -- {"furious branchy crawler", "furious branchy crawler", "furious branchy crawler"},            
                -- {"savage branchy crawler", "savage branchy crawler"},
                -- {"wrathful branchy crawler"},
            -- },
                -- storage = 876566,
                -- waves = 5,
                -- name = "Branchy Crawler"
            -- },
        -- [47958] = {
            -- monsters = {
                -- {"angry capricious phantom", "angry capricious phantom", "angry capricious phantom", "angry capricious phantom"},
                -- {"enraged capricious phantom", "enraged capricious phantom", "enraged capricious phantom"},
                -- {"furious capricious phantom", "furious capricious phantom", "furious capricious phantom"},
                -- {"savage capricious phantom", "savage capricious phantom"},
                -- {"wrathful capricious phantom"},
            -- },
                -- storage = 876567,
                -- waves = 5,
                -- name = "Capricious Phantom"
            -- },
        -- [47954] = {
            -- monsters = {
                -- {"angry cloak of terror", "angry cloak of terror", "angry cloak of terror", "angry cloak of terror"},
                -- {"enraged cloak of terror", "enraged cloak of terror", "enraged cloak of terror"},
                -- {"furious cloak of terror", "furious cloak of terror", "furious cloak of terror"},
                -- {"savage cloak of terror", "savage cloak of terror"},
                -- {"wrathful cloak of terror"},
            -- },
                -- storage = 876568,
                -- waves = 5,
                -- name = "Cloak Of Terror"
            -- },
        -- [47964] = {
            -- monsters = {
                -- {"angry courage leech", "angry courage leech", "angry courage leech", "angry courage leech"},
                -- {"enraged courage leech", "enraged courage leech", "enraged courage leech"},
                -- {"furious courage leech", "furious courage leech", "furious courage leech"},            
                -- {"savage courage leech", "savage courage leech"},
                -- {"wrathful courage leech"},
            -- },
                -- storage = 876569,    
                -- waves = 5,
                -- name = "Courage Leech"
            -- },
        -- [47973] = {
            -- monsters = {
                -- {"angry distorted phantom", "angry distorted phantom", "angry distorted phantom", "angry distorted phantom"},
                -- {"enraged distorted phantom", "enraged distorted phantom", "enraged distorted phantom"},
                -- {"furious distorted phantom", "furious distorted phantom", "furious distorted phantom"},
                -- {"savage distorted phantom", "savage distorted phantom"},
                -- {"wrathful distorted phantom"},
            -- },                
                -- storage = 876570,
                -- waves = 5,
                -- name = "Distorted Phantom"
            -- },
        -- [47966] = {
            -- monsters = {
                -- {"angry druid's apparition", "angry druid's apparition", "angry druid's apparition", "angry druid's apparition"},
                -- {"enraged druid's apparition", "enraged druid's apparition", "enraged druid's apparition"},            
                -- {"furious druid's apparition", "furious druid's apparition", "furious druid's apparition"},
                -- {"savage druid's apparition", "savage druid's apparition"},
                -- {"wrathful druid's apparition"},
            -- },
                -- storage = 876571,
                -- waves = 5,
                -- name = "Druid's Apparition"
            -- },
        -- [47961] = {
            -- monsters = {
                -- {"angry infernal demon", "angry infernal demon", "angry infernal demon", "angry infernal demon"},
                -- {"enraged infernal demon", "enraged infernal demon", "enraged infernal demon"},
                -- {"furious infernal demon", "furious infernal demon", "furious infernal demon"},
                -- {"savage infernal demon", "savage infernal demon"},
                -- {"wrathful infernal demon"},
            -- },
                -- storage = 876573,
                -- waves = 5,
                -- name = "Infernal Demon"
            -- },
        -- [47959] = {
                -- monsters = {
                    -- {"angry infernal phantom", "angry infernal phantom", "angry infernal phantom", "angry infernal phantom"},
                    -- {"enraged infernal phantom", "enraged infernal phantom", "enraged infernal phantom"},
                    -- {"furious infernal phantom", "furious infernal phantom", "furious infernal phantom"},
                    -- {"savage infernal phantom", "savage infernal phantom"},
                    -- {"wrathful infernal phantom"},
                -- },
                    -- storage = 876574,
                    -- waves = 5,
                    -- name = "Infernal Phantom"
                -- },
        -- [47967] = {
            -- monsters = {
                -- {"angry knight's apparition", "angry knight's apparition", "angry knight's apparition", "angry knight's apparition"},
                -- {"enraged knight's apparition", "enraged knight's apparition", "enraged knight's apparition"},
                -- {"furious knight's apparition", "furious knight's apparition", "furious knight's apparition"},
                -- {"savage knight's apparition", "savage knight's apparition"},
                -- {"wrathful knight's apparition"},
            -- },
                -- storage = 876575,
                -- waves = 5,
                -- name = "Knight's Apparition"
            -- },
        -- [47953] = {
            -- monsters = {
                -- {"angry many faces", "angry many faces", "angry many faces", "angry many faces"},
                -- {"enraged many faces", "enraged many faces", "enraged many faces"},
                -- {"furious many faces", "furious many faces", "furious many faces"},            
                -- {"savage many faces", "savage many faces"},
                -- {"wrathful many faces"},
            -- },
                -- storage = 876576,    
                -- waves = 5,
                -- name = "Many Faces"
            -- },
        -- [47965] = {
            -- monsters = {
                -- {"angry mould phantom", "angry mould phantom", "angry mould phantom", "angry mould phantom"},
                -- {"enraged mould phantom", "enraged mould phantom", "enraged mould phantom"},
                -- {"furious mould phantom", "furious mould phantom", "furious mould phantom"},
                -- {"savage mould phantom", "savage mould phantom"},
                -- {"wrathful mould phantom"},
            -- },
                -- storage = 876577,
                -- waves = 5,
                -- name = "Mould Phantom"
            -- },
        -- [47968] = {
            -- monsters = {
                -- {"angry paladin's apparition", "angry paladin's apparition", "angry paladin's apparition", "angry paladin's apparition"},
                -- {"enraged paladin's apparition", "enraged paladin's apparition", "enraged paladin's apparition"},
                -- {"furious paladin's apparition", "furious paladin's apparition", "furious paladin's apparition"},
                -- {"savage paladin's apparition", "savage paladin's apparition"},
                -- {"wrathful paladin's apparition"},
            -- },
                -- storage = 876578,
                -- waves = 5,
                -- name = "Paladin's Apparition"
            -- },
        -- [47962] = {
            -- monsters = {
                -- {"angry rotten golem", "angry rotten golem", "angry rotten golem", "angry rotten golem"},
                -- {"enraged rotten golem", "enraged rotten golem", "enraged rotten golem"},
                -- {"furious rotten golem", "furious rotten golem", "furious rotten golem"},
                -- {"savage rotten golem", "savage rotten golem"},
                -- {"wrathful rotten golem"},
            -- },
                -- storage = 876579,
                -- waves = 5,  
                -- name = "Rotten Golem"
            -- },
        -- [47969] = {
            -- monsters = {
                -- {"angry sorcerer's apparition", "angry sorcerer's apparition", "angry sorcerer's apparition", "angry sorcerer's apparition"},
                -- {"enraged sorcerer's apparition", "enraged sorcerer's apparition", "enraged sorcerer's apparition"},
                -- {"furious sorcerer's apparition", "furious sorcerer's apparition", "furious sorcerer's apparition"},
                -- {"savage sorcerer's apparition", "savage sorcerer's apparition"},
                -- {"wrathful sorcerer's apparition"},
            -- },
                -- storage = 876580,
                -- waves = 5,
                -- name = "Sorcerer's Apparition"
            -- },
        -- [47963] = {
            -- monsters = {
                -- {"angry turbulent elemental", "angry turbulent elemental", "angry turbulent elemental", "angry turbulent elemental"},
                -- {"enraged turbulent elemental", "enraged turbulent elemental", "enraged turbulent elemental"},            
                -- {"furious turbulent elemental", "furious turbulent elemental", "furious turbulent elemental"},
                -- {"savage turbulent elemental", "savage turbulent elemental"},
                -- {"wrathful turbulent elemental"},
            -- },  
                -- storage = 876581,    
                -- waves = 5,
                -- name = "Turbulent Elemental"
            -- },
        -- [47955] = {
            -- monsters = {
                -- {"angry vibrant phantom", "angry vibrant phantom", "angry vibrant phantom", "angry vibrant phantom"},
                -- {"enraged vibrant phantom", "enraged vibrant phantom", "enraged vibrant phantom"},
                -- {"furious vibrant phantom", "furious vibrant phantom", "furious vibrant phantom"},
                -- {"savage vibrant phantom", "savage vibrant phantom"},
                -- {"wrathful vibrant phantom"},
            -- },  
                -- storage = 876582,
                -- waves = 5,  
                -- name = "Vibrant Phantom"
        -- },
    -- },
    
    -- spawnArea = {Position(32368, 31134, 8), Position(32384, 31149, 8)},
    -- creatures = {},
    -- currentWave = 0,
    -- participants = {},
    -- currentItem = nil,
    -- lastEventTimeByPos = {}
-- }

-- local function verifyEventCreatures()
    -- if #event.creatures > 0 then
        -- local creature = nil
        -- for pid = #event.creatures, 1, -1 do
            -- creature = Creature(event.creatures[pid][1])
            -- if not creature then
                -- table.remove(event.creatures, pid)
            -- end
        -- end
    -- end
-- end

-- local function spawnEventCreatures(wave, indexTracker)
    -- local monsters = event.waves[event.currentItem].monsters[wave]
    -- if not monsters then
        -- return
    -- end
    -- for _, monster in ipairs(monsters) do
        -- local attempts = 0
        -- while attempts < 20 do
            -- local randomPosition = Position(math.random(event.spawnArea[1].x, event.spawnArea[2].x),
                                             -- math.random(event.spawnArea[1].y, event.spawnArea[2].y),
                                             -- math.random(event.spawnArea[1].z, event.spawnArea[2].z))
            -- local creature = Game.createMonster(monster, randomPosition, false, true)
            -- if creature then
                -- table.insert(event.creatures, {creature:getId()})
                -- break
            -- end
            -- attempts = attempts + 1
        -- end
    -- end
-- end

-- local function monitorEvent()
    -- verifyEventCreatures()
    -- if #event.creatures > 0 then
        -- addEvent(monitorEvent, 1000)
        -- return
    -- end
    -- if event.currentItem then
        -- if event.waves[event.currentItem] and event.currentWave == event.waves[event.currentItem].waves then
            -- local eventName = event.waves[event.currentItem].name or "Soulpit"
            -- local storageId = event.waves[event.currentItem].storage
            -- for _, playerId in pairs(event.participants) do
                -- local player = Player(playerId)
                -- if player then
                    -- local storageValue = player:getStorageValue(storageId)
                    -- if storageValue == 1 then
                        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "You have already reached the maximum experience increase limit for this monster. It is not possible to increase experience beyond this limit.")
                    -- else
                        -- player:setStorageValue(storageId, 1)
                        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "You have completed the \"" .. eventName .. "\" Soulpit and increased the experience permanently by 3% for this monster.")
                    -- end
                -- end
            -- end
            -- event.creatures = {}
            -- event.currentWave = 0
            -- event.participants = {}
            -- event.currentItem = nil
        -- end
    -- end
-- end

-- local function eventManager()
    -- if #event.creatures > 0 then
        -- addEvent(eventManager, 1000)
        -- return
    -- end
    -- if event.currentItem and event.waves[event.currentItem] then
        -- if event.currentWave < event.waves[event.currentItem].waves then
            -- event.currentWave = event.currentWave + 1
            -- spawnEventCreatures(event.currentWave, 1)
            -- addEvent(monitorEvent, 1000)
            -- addEvent(eventManager, 1000)
        -- else
            -- event.creatures = {}
            -- event.currentWave = 0
            -- event.participants = {}
            -- event.currentItem = nil
        -- end
    -- end
-- end

-- local function startNextWave()
    -- verifyEventCreatures()
    -- if #event.creatures == 0 and event.currentItem then
        -- if event.currentWave < event.waves[event.currentItem].waves then
            -- event.currentWave = event.currentWave + 1
            -- spawnEventCreatures(event.currentWave, 1)
            -- addEvent(monitorEvent, 1000)
            -- addEvent(eventManager, 1000)
        -- else
            -- event.creatures = {}
            -- event.currentWave = 0
            -- event.participants = {}
            -- event.currentItem = nil
        -- end
    -- else
        -- addEvent(startNextWave, 1000)
    -- end
-- end

-- local function checkAndStartWave(player, item)
    -- local itemId = item:getId()
    -- local currentTime = os.time()
    -- local playerPos = player:getPosition()

    -- local validPositions = {
        -- Position(32375, 31163, 8),
        -- Position(32375, 31164, 8),
        -- Position(32375, 31165, 8),
        -- Position(32375, 31166, 8),
        -- Position(32375, 31167, 8)
    -- }
    
    -- local isInValidPosition = false
    -- for _, pos in ipairs(validPositions) do
        -- if playerPos.x == pos.x and playerPos.y == pos.y and playerPos.z == pos.z then
            -- isInValidPosition = true
            -- break
        -- end
    -- end

    -- if not isInValidPosition then
        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "You must be at the correct location to start the event.")
        -- return false
    -- end

    -- local posKey = string.format("%d,%d,%d", playerPos.x, playerPos.y, playerPos.z)
    -- local lastEventTime = event.lastEventTimeByPos[posKey]
    -- if lastEventTime and (currentTime - lastEventTime) < 600 then 
        -- local remainingTime = 600 - (currentTime - lastEventTime)
        -- local minutes = math.floor(remainingTime / 60)
        -- local seconds = remainingTime % 60
        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, string.format("The event is on cooldown. Please wait %d minute(s) and %d second(s) before starting another.", minutes, seconds))
        -- return false
    -- end

    -- if event.waves[itemId] then
        -- event.currentItem = itemId
        -- item:remove(1)
        -- table.insert(event.participants, player:getId())
        -- event.lastEventTimeByPos[posKey] = currentTime
        -- addEvent(function()
            -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "The Soulpit has been started.")
            -- startNextWave()
        -- end, 5000) 
        -- return true
    -- end
    -- event.currentItem = nil
    -- addEvent(function()
        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "You need a Soul Core to start the Soulpit.")
    -- end, 5000)
    -- return false
-- end

-- local config = {
    -- actionId = 57392,
    -- participantsPos = {
        -- Position(32375, 31163, 8),
        -- Position(32375, 31164, 8),
        -- Position(32375, 31165, 8),
        -- Position(32375, 31166, 8),
        -- Position(32375, 31167, 8)
    -- },
    -- spawnArea = {
        -- fromPos = Position(32359, 31126, 8), 
        -- toPos = Position(32394, 31159, 8)
    -- },
    -- entranceArea = Position(32376, 31148, 8),
-- }

-- local function getSpectators()
    -- if not config.centerPosition then
        -- config.diffX = math.ceil((config.spawnArea.toPos.x - config.spawnArea.fromPos.x) / 2)
        -- config.diffY = math.ceil((config.spawnArea.toPos.y - config.spawnArea.fromPos.y) / 2)
        -- config.centerPosition = config.spawnArea.fromPos + Position(config.diffX, config.diffY, 0)
    -- end
    -- return Game.getSpectators(config.centerPosition, config.spawnArea.fromPos, config.spawnArea.toPos, false, true)
-- end

-- local soulPit = Action()

-- function soulPit.onUse(player, item, fromPos, target, toPos, isHotkey)
    -- local participants = {}
    -- for index, pos in pairs(config.participantsPos) do
        -- local tile = Tile(pos)
        -- if not tile then error("[Warning - Tile not found]") end
        -- local participant = tile:getTopVisibleCreature(player)
        -- if participant and participant:isPlayer() then
            -- if index == 1 and participant ~= player then
                -- player:sendCancelMessage("Only the first participant can pull the lever.")
                -- return true
            -- end
            -- participants[#participants + 1] = participant  
        -- end
    -- end

    -- local spectators = getSpectators()
    -- for _, spectator in pairs(spectators) do
        -- if spectator:isPlayer() then
            -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "At this time the Soulpit is occupied, please try again later.")
            -- return true
        -- end
    -- end

    -- for _, spectator in pairs(spectators) do spectator:remove() end
    -- local itemId = event.waves[item:getId()]
    -- local spectators = Game.getSpectators(Position(32375, 31162, 8), false, true, 10, 10, 10, 10)
    -- if event.waves[item:getId()] and target:getActionId() == config.actionId then
        -- target:transform(47367) 
        -- if checkAndStartWave(player, item) then
		
            -- for index, participant in pairs(participants) do
                -- config.participantsPos[index]:sendMagicEffect(CONST_ME_POFF)
                -- participant:teleportTo(config.entranceArea, false)
                -- config.entranceArea:sendMagicEffect(CONST_ME_TELEPORT)
            -- end
            -- target:transform(47379)
        -- end
    -- else
        -- player:sendTextMessage(MESSAGE_EVENT_ADVANCE, "You need a Soul Core to start the event.")
    -- end
    -- return true
-- end

-- for itemId, _ in pairs(event.waves) do
    -- soulPit:id(itemId)
-- end
-- soulPit:register()
